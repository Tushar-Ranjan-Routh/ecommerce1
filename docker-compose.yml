services:
  zookeeper:
    image: bitnami/zookeeper:3.9
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    networks:
      - app-net

  kafka:
    image: bitnami/kafka:3.6
    container_name: kafka
    ports:
      - "9092:9092"
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_LISTENERS=PLAINTEXT://:9092
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
      - ALLOW_PLAINTEXT_LISTENER=yes
    depends_on:
      - zookeeper
    healthcheck:
      test: ["CMD", "kafka-topics.sh", "--bootstrap-server", "localhost:9092", "--list"]
      interval: 10s
      timeout: 5s
      retries: 10
    networks:
      - app-net

  redis:
    image: redis:7
    container_name: redis
    ports:
      - "6379:6379"
    networks:
      - app-net

  order-postgres:
    image: postgres:15
    container_name: order-postgres
    environment:
      POSTGRES_DB: orders
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - app-net

  prometheus:
    image: prom/prometheus
    container_name: prometheus
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"
    networks:
      - app-net

  grafana:
    image: grafana/grafana
    container_name: grafana
    ports:
      - "3000:3000"
    depends_on:
      - prometheus
    networks:
      - app-net

  order-service:
    build:
      context: ./order-service
      dockerfile: Dockerfile
    image: order-service:latest
    container_name: order-service
    depends_on:
      - kafka
      - order-postgres
    environment:
      - KAFKA_BROKER=kafka:9092
      - DB_HOST=order-postgres
      - DB_USER=user
      - DB_PASSWORD=password
      - DB_NAME=orders
    ports:
      - "8083:8082"   # âœ… Map container port 8082 to host port 8081
    networks:
      - app-net


  shipping-service:
    build:
      context: ./shipping-service
      dockerfile: Dockerfile
    image: shipping-service:latest
    container_name: shipping-service
    depends_on:
      - kafka
    environment:
      - KAFKA_BROKER=kafka:9092
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    ports:
      - "8082:8082"
    networks:
      - app-net

volumes:
  pgdata:

networks:
  app-net:
